#############################
Author: Mayuresh Sonar
PRN: 055
Group No: 05
Date of Creation: 23-03-2021
#############################


Q.1

===> Unable to use Pivot function in MySQL because its not supported.
	so solving without pivot.

		Answer Query{
	select * from Occupations order by name asc;
	}


	create table occupations (Name varchar(20),Occupation varchar(20));



	insert into occupations values (' Samantha ', ' Doctor ');
	insert into occupations values (' Julia', ' Actor');
	insert into occupations values (' Maria', ' Actor');
	insert into occupations values (' Meera', ' Singer');
	insert into occupations values (' Ashley', ' Professor');
	insert into occupations values (' Kitty', ' Professor');
	insert into occupations values (' Christeen', ' Professor ');
	insert into occupations values (' Jone', ' Actor');
	insert into occupations values (' Jennny', ' Doctor ');
	insert into occupations values (' Priya', ' Singer');

	select * from occupations;




##########################################################################################

Q.2 
===>	Answer Query{
		select company_code, founder, count(lead_manager_code) as TotalLeadManagers , count(senior_manager_code) as TotalSeniorManagers
, count(manager_code) as TotalManagers, count(employee_code) as TotalEmployees
from company, lead_manager, senior_manager, manager, employee
where company.company_code=lead_manager.company_code=senior_manager.company_code=manager.company_code=employee.company_code
order by company_code asc;	
}



	CREATE TABLE `ppt`.`company` (
  	`Company_code` VARCHAR(10) NOT NULL,
  	`Founder` VARCHAR(45) NULL,
  	PRIMARY KEY (`Company_code`));

	CREATE TABLE `ppt`.`lead_manager` (
  	`lead_manager_code` VARCHAR(20) NOT NULL,
  	`company_code` VARCHAR(45) NOT NULL,
  	PRIMARY KEY (`lead_manager_code`),
  	INDEX `company_code_fk_idx` (`company_code` ASC) VISIBLE,
  	CONSTRAINT `company_code_fk`
    	FOREIGN KEY (`company_code`)
    	REFERENCES `ppt`.`company` (`Company_code`)
    	ON DELETE NO ACTION
    	ON UPDATE NO ACTION);

	CREATE TABLE `ppt`.`senior_manager` (
 	 `senior_manager_code` VARCHAR(20) NOT NULL,
  	`lead_manager_code` VARCHAR(45) NOT NULL,
  	`company_code` VARCHAR(45) NOT NULL,
  	PRIMARY KEY (`senior_manager_code`),
  	INDEX `lead_manager_code_fk_idx` (`lead_manager_code` ASC) VISIBLE,
  	INDEX `company_code_fk1_idx` (`company_code` ASC) VISIBLE,
  	CONSTRAINT `lead_manager_code_fk`
    	FOREIGN KEY (`lead_manager_code`)
   	 REFERENCES `ppt`.`lead_manager` (`lead_manager_code`)
   	 ON DELETE NO ACTION
    	ON UPDATE NO ACTION,
  	CONSTRAINT `company_code_fk1`
    	FOREIGN KEY (`company_code`)
    	REFERENCES `ppt`.`company` (`Company_code`)
    	ON DELETE NO ACTION
    	ON UPDATE NO ACTION);


	CREATE TABLE `ppt`.`manager` (
  `manager_code` VARCHAR(20) NOT NULL,
  `lead_manager_code` VARCHAR(45) NOT NULL,
  `senior_manager_code` VARCHAR(45) NOT NULL,
  `company_code` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`manager_code`),
  INDEX `lead_manager_code_fk1_idx` (`lead_manager_code` ASC) VISIBLE,
  INDEX `senior_manager_code_fk_idx` (`senior_manager_code` ASC) VISIBLE,
  INDEX `company_code_idx` (`company_code` ASC) VISIBLE,
  CONSTRAINT `lead_manager_code_fk1`
    FOREIGN KEY (`lead_manager_code`)
    REFERENCES `ppt`.`lead_manager` (`lead_manager_code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `senior_manager_code_fk`
    FOREIGN KEY (`senior_manager_code`)
    REFERENCES `ppt`.`senior_manager` (`senior_manager_code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `company_code`
    FOREIGN KEY (`company_code`)
    REFERENCES `ppt`.`company` (`Company_code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


	ALTER TABLE `ppt`.`manager` 
DROP FOREIGN KEY `company_code`;
ALTER TABLE `ppt`.`manager` 
ADD CONSTRAINT `company_code_fk2`
  FOREIGN KEY (`company_code`)
  REFERENCES `ppt`.`company` (`Company_code`);

	CREATE TABLE `ppt`.`employee` (
  `employee_code` VARCHAR(25) NOT NULL,
  `lead_manager_code` VARCHAR(45) NOT NULL,
  `Senior_manager_code` VARCHAR(45) NULL,
  `manager_code` VARCHAR(45) NOT NULL,
  `company_code` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`employee_code`),
  INDEX `lead_manager_code_fk2_idx` (`lead_manager_code` ASC) VISIBLE,
  INDEX `manager_code_fk_idx` (`manager_code` ASC) VISIBLE,
  INDEX `company_code_fk3_idx` (`company_code` ASC) VISIBLE,
  INDEX `senior_manager_code_fk1_idx` (`Senior_manager_code` ASC) VISIBLE,
  CONSTRAINT `lead_manager_code_fk2`
    FOREIGN KEY (`lead_manager_code`)
    REFERENCES `ppt`.`lead_manager` (`lead_manager_code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `senior_manager_code_fk1`
    FOREIGN KEY (`Senior_manager_code`)
    REFERENCES `ppt`.`senior_manager` (`senior_manager_code`)
    ON DELETE NO ACTION
    ON UPDATE SET NULL,
  CONSTRAINT `manager_code_fk`
    FOREIGN KEY (`manager_code`)
    REFERENCES `ppt`.`manager` (`manager_code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `company_code_fk3`
    FOREIGN KEY (`company_code`)
    REFERENCES `ppt`.`company` (`Company_code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


#########################################################################################################################


Q3.

===>	
	Answer Query{	
			case1:
			select count(end_date-start_date) as CompletedProject from projects where (end_date-start_date)>0;
			
			case2:
			select start_date, end_date, (end_date-start_date) 
			from projects order by start_date asc;
		}
	
	CREATE TABLE `projects` (
  `task_id` int NOT NULL,
  `start_date` date DEFAULT NULL,
  `end_date` date DEFAULT NULL,
  PRIMARY KEY (`task_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;


insert into projects values(1 , ' 2015-10-01 ' , ' 2015-10-02 ' );
insert into projects values(2 , ' 2015-10-02 ' , ' 2015-10-03 ' );
insert into projects values(3 , ' 2015-10-03 ' , ' 2015-10-04 ' );
insert into projects values(4 , ' 2015-10-13 ' , ' 2015-10-14 ' );
insert into projects values(5 , ' 2015-10-14 ' , ' 2015-10-15 ' );
insert into projects values(6 , ' 2015-10-28 ' , ' 2015-10-29 ' );
insert into projects values(7 , ' 2015-10-30 ' , ' 2015-10-31 ' );


	
##################################################################################

Q.4

===>
	
	Answer Query{	
			select distinct * from functions order by x asc;
		}


